---
networks:
  frontend:
    external: true
  backend:
    external: true

services:
  server:
    image: ghcr.io/goauthentik/server:2024.10.0
    container_name: authentik-prod-1-server
    restart: unless-stopped
    command: server
    environment:
      - AUTHENTIK_REDIS__HOST=redis-prod-1
      - AUTHENTIK_POSTGRESQL__HOST=pdb-prod-1
      - AUTHENTIK_POSTGRESQL__USER=${POSTGRES_USER}
      - AUTHENTIK_POSTGRESQL__NAME=${POSTGRES_DB}
      - AUTHENTIK_POSTGRESQL__PASSWORD=${POSTGRES_PASSWORD}
      - AUTHENTIK_ERROR_REPORTING__ENABLED=true
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY}
    volumes:
      - ./media:/media
      - ./custom-templates:/templates
    labels:
      - traefik.enable=true
      - traefik.http.routers.authentik-prod-1-https.rule=Host(`authentik-prod-1.srv-prod-1.home.ragekuuhaku.cloud`)
      - traefik.http.routers.authentik-prod-1-https.entrypoints=websecure
      - traefik.http.routers.authentik-prod-1-https.tls=true
      - traefik.http.routers.authentik-prod-1-https.tls.certresolver=cloudflare
      - traefik.http.routers.authentik-prod-1-https.service=authentik-prod-1
      - traefik.http.services.authentik-prod-1.loadbalancer.server.port=9000
      - traefik.http.services.authentik-prod-1.loadbalancer.server.scheme=http
    networks:
      - frontend
      - backend

  worker:
    image: ghcr.io/goauthentik/server:2024.10.0
    container_name: authentik-prod-1-worker
    restart: unless-stopped
    command: worker
    environment:
      - AUTHENTIK_REDIS__HOST=redis-prod-1
      - AUTHENTIK_POSTGRESQL__HOST=pdb-prod-1
      - AUTHENTIK_POSTGRESQL__USER=${POSTGRES_USER}
      - AUTHENTIK_POSTGRESQL__NAME=${POSTGRES_DB}
      - AUTHENTIK_POSTGRESQL__PASSWORD=${POSTGRES_PASSWORD}
      - AUTHENTIK_ERROR_REPORTING__ENABLED=true
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY}
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./media:/media
      - ./certs:/certs
      - ./custom-templates:/templates
    networks:
      - backend